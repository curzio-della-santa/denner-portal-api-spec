{
	"variables": [],
	"info": {
		"name": "Denner import checks",
		"_postman_id": "5ae702a4-8f2d-f49b-6589-12c272d9c8f8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Articles import",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "var jsonData = JSON.parse(responseBody);\n\ntests[\"All articles in sync\"] = jsonData.total_items === 0;\n\n"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": "function addMinutes(date, minutes) {\n    return new Date(date.getTime() + minutes*60000);\n}\nvar myDate = new Date((new Date()).getTime() - 90 * 60000),\n    dateStr = \n        myDate.getFullYear() + \"-\" + (myDate.getMonth() + 1) + \"-\" + myDate.getDate() + \" \" +\n        myDate.getHours() + \":\" + myDate.getMinutes() + \":\" + myDate.getSeconds();\n    \n\npostman.setEnvironmentVariable(\"now_minus_1_and_half_hour\", dateStr);"
					}
				}
			],
			"request": {
				"url": "{{articles_url_base}}/articles?filter=[{\"property\":\"synced_on\",\"operator\":\"lt\",\"value\":\"{{now_minus_1_and_half_hour}}\",\"type\":\"string\"}]&page_size=1&page=1",
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{header_accept}}",
						"description": ""
					},
					{
						"key": "App-ID",
						"value": "{{articles_header_app_id}}",
						"description": ""
					},
					{
						"key": "App-Key",
						"value": "{{articles_header_app_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": "Check that \n- All articles have been synced in the last 1 1/2 hour"
			},
			"response": []
		},
		{
			"name": "Prices import",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "var jsonData = JSON.parse(responseBody);\n\ntests[\"All prices in sync\"] = jsonData.total_items === 0;"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": "function addMinutes(date, minutes) {\n    return new Date(date.getTime() + minutes*60000);\n}\nvar myDate = new Date((new Date()).getTime() - 180 * 60000),\n    dateStr = \n        myDate.getFullYear() + \"-\" + (myDate.getMonth() + 1) + \"-\" + myDate.getDate() + \" \" +\n        myDate.getHours() + \":\" + myDate.getMinutes() + \":\" + myDate.getSeconds();\n    \n\npostman.setEnvironmentVariable(\"now_minus_3_hours\", dateStr);"
					}
				}
			],
			"request": {
				"url": "{{articles_url_base}}/articles?filter=[{\"property\":\"prices_synced_on\",\"operator\":\"lt\",\"value\":\"{{now_minus_3_hours}}\",\"type\":\"string\"}]&page_size=1&page=1",
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{header_accept}}",
						"description": ""
					},
					{
						"key": "App-ID",
						"value": "{{articles_header_app_id}}",
						"description": ""
					},
					{
						"key": "App-Key",
						"value": "{{articles_header_app_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": "Check that \n- All prices have been synced in the last 3 hours"
			},
			"response": []
		},
		{
			"name": "Shop wines ",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "var jsonData = JSON.parse(responseBody);\nvar allOk = true;\n\nfor (var i =0; i < jsonData.articles.length; ++i) {\n    var article = jsonData.articles[i],\n        testPrefix = 'Wine: ' + article.id + ' - ' + article.name + ' - '\n        shop = article.wine.shop;\n        \n    if (!shop) {\n        allOk = false;\n        tests[testPrefix + 'Missing shop info'] = false;\n        continue;\n    } \n    \n    if ([0,1,4,5].indexOf(shop.status.level) > -1  ) { // Skip wines that have a not allowed level\n        allOk = false;\n        for (var mi=0; mi < shop.inspection.results.length; ++mi) {\n             tests[testPrefix + shop.inspection.results[mi].message] = false;\n        }\n    }\n}\n\nif (jsonData.total_items > 100) {\n    // This happens because we can't fetch only wines with allowed status level .. should batch\n    tests[\"Shop wines only partially tested (100/\" + jsonData.total_items + \") .. you should test the next page\"] = false;\n} \n\ntests[\"Shop wines\"] = allOk;\n\n\n\n\n"
					}
				}
			],
			"request": {
				"url": "{{articles_url_base}}/articles?filter=[{\"property\":\"to_shop\",\"operator\":\"=\",\"value\":\"1\",\"type\":\"integer\"},{\"property\":\"for_shop\",\"operator\":\"=\",\"value\":\"0\",\"type\":\"integer\"}]&page_size=100&page=1",
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{header_accept}}",
						"description": ""
					},
					{
						"key": "App-ID",
						"value": "{{articles_header_app_id}}",
						"description": ""
					},
					{
						"key": "App-Key",
						"value": "{{articles_header_app_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": "Check that:\n - All wines to-shop are also for-shop"
			},
			"response": []
		}
	]
}